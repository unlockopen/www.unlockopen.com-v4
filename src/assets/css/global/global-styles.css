/*
  Global styles

  Low-specificity, global styles that apply to the whole
  project: https://cube.fyi/css.html
*/

@supports not (font-variation-settings: normal) {
  body {
    font-weight: var(--font-regular);
  }
}

@supports (font-variation-settings: normal) {
  body {
    font-weight: var(--font-light);
  }
}

@media (prefers-contrast: less) {
  body {
    opacity: 0.8;
  }
}

/* Base typesetting */
h1,
h2,
h3 {
  line-height: var(--leading-flat);
  letter-spacing: var(--tracking-s);
  font-family: var(--font-display);
  font-weight: var(--font-medium);
}

h1 {
  font-size: var(--size-step-6);
}

h2 {
  font-size: var(--size-step-3);
}

h3 {
  font-size: var(--size-step-2);
}

/* Set line lengths */
p,
li,
blockquote:not([class]) {
  max-inline-size: 50ch;
}

h1,
h2,
h3 {
  max-inline-size: 40ch;
}

strong {
  font-weight: var(--font-semi-bold);
}

em {
  font-style: italic;
  font-style: oblique 12deg;
}

.heading-anchor {
  text-decoration: none;
}

blockquote {
  --flow-space: var(--space-s-m);
  border-inline-start: 0.8ex solid var(--color-accent);
  font-size: var(--size-step-1);
  padding-inline: var(--space-s-m);
  padding-block: var(--space-xs);
  background-color: color-mix(in oklab, var(--color-accent) 7%, var(--color-bg));
}

blockquote + * {
  --flow-space: var(--space-s-m);
}

blockquote + blockquote {
  --flow-space: 0;
}

blockquote :last-child {
  font-style: normal;
  font-size: var(--size-step-1);
}

svg {
  block-size: 2ex;
  inline-size: auto;
  flex: none;
}

hr {
  border: none;
  --flow-space: var(--space-m-l);
  border-block-start: 1px dashed var(--color-grey-dark);
  margin-block-end: var(--space-s-m);
  margin-inline: 0 !important;
  max-width: 50ch;
  transform: translateY(-1px);
}

[role='list'] {
  padding: 0;
}

/* Base interactive elements */

a {
  color: currentcolor;
  text-decoration-thickness: 0.08em;
}

a:hover {
  text-decoration: none;
}

:focus-visible {
  outline: 3px solid;
  outline-offset: 0.3ch;
}

main:focus {
  outline: none;
}

/* Base selection styles that invert whatever colours are rendered */
::selection {
  background: var(--color-accent);
  color: var(--color-bg);
}

.preload-transitions * {
  transition: none !important;
}

@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  ::after,
  ::before {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    scroll-behavior: auto !important;
    transition-duration: 0.01ms !important;
  }
}
